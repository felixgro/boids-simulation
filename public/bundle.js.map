{
  "version": 3,
  "sources": ["../src/AnimationController.ts", "../src/Vec2.ts", "../src/utils/vector.ts", "../src/Boids/Birdoid.ts", "../src/Boids/Boid.ts", "../src/Boids/Enemy.ts", "../src/Boids/Flock.ts", "../src/utils/canvas.ts", "../src/main.ts"],
  "sourcesContent": ["export default class AnimationController {\n\tpublic animationId: number = 0;\n\tpublic fps: number = 0;\n\n\tpublic lastCall: DOMHighResTimeStamp = 0;\n\n\tconstructor(\n\t\tpublic ctx: CanvasRenderingContext2D,\n\t\tpublic callback: Function\n\t) {}\n\n\tpublic start() {\n\t\tthis.requestNewFrame();\n\t}\n\n\tpublic stop() {\n\t\twindow.cancelAnimationFrame(this.animationId);\n\t}\n\n\tpublic requestNewFrame() {\n\t\tif (!this.lastCall) this.lastCall = performance.now();\n\t\tthis.animationId = requestAnimationFrame(this.loop.bind(this));\n\t}\n\n\tpublic loop() {\n\t\tconst current: DOMHighResTimeStamp = performance.now();\n\t\tconst elapsed: DOMHighResTimeStamp = current - this.lastCall;\n\t\tthis.fps = 60 / ((elapsed / 1000) * 60);\n\n\t\tthis.ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\t\tthis.callback(this.ctx);\n\n\t\tthis.lastCall = current;\n\t\tthis.requestNewFrame();\n\t}\n}\n", "class Vec2 {\n\tconstructor(public x: number = 0, public y: number = 0) {}\n\n\tstatic random(max_length?: number, strict: boolean = false): Vec2 {\n\t\tlet x: number = Math.round(Math.random()) ? 1 : -1;\n\t\tlet y: number = Math.round(Math.random()) ? 1 : -1;\n\n\t\tconst vec = new Vec2(x, y).toUnit();\n\n\t\tif (max_length) {\n\t\t\tconst len = strict ? max_length : Math.random() * max_length;\n\t\t\tvec.setMagnitude(len);\n\t\t}\n\n\t\treturn vec;\n\t}\n\n\tget length(): number {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tadd(v: Vec2): Vec2 {\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\t}\n\n\tsubtract(v: Vec2): Vec2 {\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\t}\n\n\tmultiply(n: number): Vec2 {\n\t\tthis.x *= n;\n\t\tthis.y *= n;\n\n\t\treturn this;\n\t}\n\n\tdivide(n: number): Vec2 {\n\t\tif (n === 0) return this;\n\n\t\tthis.x /= n;\n\t\tthis.y /= n;\n\n\t\treturn this;\n\t}\n\n\tinverse(): Vec2 {\n\t\tthis.x *= -1;\n\t\tthis.y *= -1;\n\n\t\treturn this;\n\t}\n\n\ttoUnit(): Vec2 {\n\t\tthis.divide(this.length);\n\n\t\treturn this;\n\t}\n\n\tsetMagnitude(mag: number = 1): Vec2 {\n\t\tthis.toUnit();\n\t\tthis.multiply(mag);\n\n\t\treturn this;\n\t}\n\n\tlimit(max_len: number, min_len: number = 0): Vec2 {\n\t\tif (this.length > max_len) this.setMagnitude(max_len);\n\t\tif (this.length < min_len) this.setMagnitude(min_len);\n\n\t\treturn this;\n\t}\n\n\tcopy(): Vec2 {\n\t\treturn new Vec2(this.x, this.y);\n\t}\n}\n\nexport default Vec2;\n", "import Vec2 from '../Vec2';\n\nexport const dist = (v1: Vec2, v2: Vec2): number => {\n\tconst dx = Math.abs(v1.x - v2.x);\n\tconst dy = Math.abs(v1.y - v2.y);\n\n\treturn Math.sqrt(dx * dx + dy * dy);\n};\n\nexport const randomVector = (w: number, h: number): Vec2 => {\n\tconst x = Math.random() * w;\n\tconst y = Math.random() * h;\n\n\treturn new Vec2(x, y);\n};\n", "import Vec2 from '../Vec2';\nimport { randomVector } from '../utils/vector';\n\nexport default class Birdoid {\n\tpublic label: string = 'boid';\n\n\tpublic pos: Vec2;\n\tpublic vel: Vec2;\n\tpublic acc: Vec2;\n\n\tpublic alive: boolean = true;\n\n\tpublic color: string = '#fff';\n\tpublic width: number = 6;\n\tpublic height: number = 10;\n\tpublic showFOV: boolean = false;\n\n\tpublic urge: number = 0;\n\tpublic range: number = 0;\n\n\tpublic fov: number = 360;\n\tpublic viewDistance: number = 42;\n\n\tpublic steeringForce: number = 0.2;\n\n\tpublic minSpeed: number = 1.2;\n\tpublic maxSpeed: number = 4;\n\n\tconstructor() {\n\t\tthis.pos = randomVector(window.innerWidth, window.innerHeight);\n\t\tthis.vel = Vec2.random(3);\n\t\tthis.acc = new Vec2();\n\t}\n\n\ttick() {\n\t\tthis.stayInBounds();\n\n\t\tthis.vel.limit(this.maxSpeed, this.minSpeed);\n\n\t\tthis.pos.add(this.vel);\n\t\tthis.vel.add(this.acc);\n\n\t\tthis.acc.multiply(0);\n\t}\n\n\tflock(others: Birdoid[]) {}\n\n\tcanView(boid: Birdoid) {\n\t\tconst distVector = boid.pos.copy().subtract(this.pos);\n\t\tconst fov: number = (this.fov * Math.PI) / 180;\n\n\t\tconst relAngle = Math.abs(\n\t\t\tMath.atan2(this.vel.y, this.vel.x) -\n\t\t\t\tMath.atan2(distVector.y, distVector.x)\n\t\t);\n\n\t\tconst inDistance: boolean = distVector.length <= this.viewDistance;\n\n\t\tconst inFOV: boolean =\n\t\t\trelAngle < fov / 2 || relAngle > 2 * Math.PI - fov / 2;\n\n\t\treturn inDistance && inFOV && this !== boid;\n\t}\n\n\tstayInBounds() {\n\t\tconst margin: number = 100;\n\n\t\tif (this.pos.x < margin) {\n\t\t\tthis.acc.add(new Vec2(this.steeringForce, 0));\n\t\t}\n\n\t\tif (this.pos.x > window.innerWidth - margin) {\n\t\t\tthis.acc.add(new Vec2(-this.steeringForce, 0));\n\t\t}\n\n\t\tif (this.pos.y < margin) {\n\t\t\tthis.acc.add(new Vec2(0, this.steeringForce));\n\t\t}\n\n\t\tif (this.pos.y > window.innerHeight - margin) {\n\t\t\tthis.acc.add(new Vec2(0, -this.steeringForce));\n\t\t}\n\n\t\tthis.acc.limit(0.5);\n\t}\n\n\trender(ctx: CanvasRenderingContext2D) {\n\t\tctx.save();\n\t\tctx.translate(this.pos.x, this.pos.y);\n\n\t\t// rotate in direction of velocity vector\n\t\tconst dirRad = Math.atan2(this.vel.y, this.vel.x) + Math.PI / 2;\n\t\tctx.rotate(dirRad);\n\n\t\tif (this.showFOV) this.drawFOV(ctx);\n\n\t\t// draw Boid as triangle\n\t\tctx.beginPath();\n\t\tctx.moveTo(0, -this.height / 2);\n\t\tctx.lineTo(-this.width / 2, this.height / 2);\n\t\tctx.lineTo(this.width / 2, this.height / 2);\n\t\tctx.fillStyle = this.color;\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tctx.translate(-this.pos.x, -this.pos.y);\n\t\tctx.restore();\n\t}\n\n\tdrawFOV(ctx: CanvasRenderingContext2D) {\n\t\tctx.strokeStyle = '#fff';\n\t\tctx.lineWidth = 0.2;\n\n\t\tctx.beginPath();\n\n\t\t// Arc\n\t\tconst rad =\n\t\t\tthis.fov === 360 ? (359 * Math.PI) / 180 : (this.fov * Math.PI) / 180;\n\t\tctx.arc(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.viewDistance,\n\t\t\tMath.PI * 1.5 - rad / 2,\n\t\t\tMath.PI * -0.5 + rad / 2\n\t\t);\n\n\t\t// Left Line\n\t\tctx.moveTo(0, 0);\n\t\tctx.lineTo(\n\t\t\tMath.cos((90 * Math.PI) / 180 + rad / 2) * this.viewDistance,\n\t\t\tMath.sin((-90 * Math.PI) / 180 + rad / 2) * this.viewDistance\n\t\t);\n\n\t\t// Right Line\n\t\tctx.moveTo(0, 0);\n\t\tctx.lineTo(\n\t\t\tMath.cos((90 * Math.PI) / 180 - rad / 2) * this.viewDistance,\n\t\t\tMath.sin((-90 * Math.PI) / 180 - rad / 2) * this.viewDistance\n\t\t);\n\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t}\n}\n", "import Vec2 from '../Vec2';\nimport Birdoid from './Birdoid';\n\nexport default class Boid extends Birdoid {\n\tpublic label: string = 'boid';\n\n\tpublic cohesion: number = 1;\n\tpublic alignment: number = 1;\n\tpublic seperation: number = 1;\n\n\tflock(others: Birdoid[]) {\n\t\tconst cohesion = new Vec2();\n\t\tconst alignment = new Vec2();\n\t\tconst seperation = new Vec2();\n\n\t\tconst survival = new Vec2();\n\n\t\tlet boidsInView: number = 0;\n\t\tlet enemiesInView: number = 0;\n\n\t\tfor (let other of others) {\n\t\t\tif (other === this) continue;\n\t\t\tif (this.canView(other)) {\n\t\t\t\tconst distVector = other.pos.copy().subtract(this.pos);\n\n\t\t\t\tif (other.label == 'enemy') {\n\t\t\t\t\tsurvival.add(distVector.copy().divide(distVector.length));\n\t\t\t\t\tenemiesInView++;\n\t\t\t\t} else {\n\t\t\t\t\talignment.add(other.vel);\n\t\t\t\t\tcohesion.add(other.pos);\n\t\t\t\t\tseperation.add(distVector.inverse().divide(distVector.length));\n\n\t\t\t\t\tboidsInView++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (boidsInView > 0) {\n\t\t\talignment\n\t\t\t\t.divide(boidsInView)\n\t\t\t\t.setMagnitude(3)\n\t\t\t\t.subtract(this.vel)\n\t\t\t\t.limit(0.22)\n\t\t\t\t.multiply(this.alignment);\n\n\t\t\tcohesion\n\t\t\t\t.divide(boidsInView)\n\t\t\t\t.subtract(this.pos)\n\t\t\t\t.setMagnitude(3)\n\t\t\t\t.limit(0.24)\n\t\t\t\t.multiply(this.cohesion);\n\n\t\t\tseperation\n\t\t\t\t.divide(boidsInView)\n\t\t\t\t.setMagnitude(3)\n\t\t\t\t.limit(0.315)\n\t\t\t\t.multiply(this.seperation);\n\t\t}\n\n\t\tif (enemiesInView > 0) {\n\t\t\tsurvival.divide(enemiesInView).inverse().setMagnitude(0.3);\n\t\t}\n\n\t\tthis.acc.add(seperation);\n\t\tthis.acc.add(cohesion);\n\t\tthis.acc.add(alignment);\n\t\tthis.acc.add(survival);\n\t}\n}\n", "import Vec2 from '../Vec2';\nimport Birdoid from './Birdoid';\n\nexport default class Enemy extends Birdoid {\n\tpublic label: string = 'enemy';\n\n\tpublic color: string = '#ff0000';\n\n\tpublic minSpeed: number = 2.6;\n\tpublic maxSpeed: number = 4.3;\n\n\tpublic fov: number = 320;\n\tpublic viewDistance: number = 300;\n\n\tpublic urge: number = 0;\n\tpublic range: number = 6;\n\n\tpublic target: Birdoid | null = null;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic flock(others: Birdoid[]) {\n\t\tconst seperation = new Vec2();\n\t\tlet nearest: [Birdoid | null, number] = [null, Infinity];\n\t\tlet boidsInView: number = 0;\n\n\t\tfor (let other of others) {\n\t\t\tif (other === this) continue;\n\n\t\t\tif (this.canView(other)) {\n\t\t\t\tconst distVector = other.pos.copy().subtract(this.pos);\n\t\t\t\tseperation.add(distVector.inverse().divide(distVector.length));\n\t\t\t\tboidsInView++;\n\t\t\t\tif (nearest[1] > distVector.length && other.label !== 'enemy') {\n\t\t\t\t\tnearest = [other, distVector.length];\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tother.pos.x < this.pos.x + this.range &&\n\t\t\t\t\tother.pos.x > this.pos.x - this.range &&\n\t\t\t\t\tother.pos.y < this.pos.y + this.range &&\n\t\t\t\t\tother.pos.y > this.pos.y - this.range &&\n\t\t\t\t\tother.alive &&\n\t\t\t\t\tother.label !== 'enemy'\n\t\t\t\t) {\n\t\t\t\t\tother.alive = false;\n\t\t\t\t\tthis.urge -= 300;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearest[0] && this.urge >= 450) {\n\t\t\tconst killUrge = nearest[0].pos\n\t\t\t\t.copy()\n\t\t\t\t.subtract(this.pos)\n\t\t\t\t.add(nearest[0].vel)\n\t\t\t\t.setMagnitude(0.28);\n\n\t\t\tthis.acc.add(killUrge);\n\t\t} else if (this.urge < 1000) {\n\t\t\tseperation.divide(boidsInView).limit(0.08);\n\t\t\tthis.acc.add(seperation);\n\t\t}\n\t\tthis.urge++;\n\t\tif (this.urge > 1000) this.urge = 1000;\n\t\tif (this.urge < 0) this.urge = 0;\n\t}\n}\n", "import Birdoid from './Birdoid';\nimport Boid from './Boid';\nimport Enemy from './Enemy';\n\nexport default class Flock {\n\tpublic boids: Birdoid[] = [];\n\n\tprivate static instance: Flock;\n\n\tstatic getInstance() {\n\t\tif (!Flock.instance)\n\t\t\tFlock.instance = new Flock().init(10, 0);\n\n\t\treturn Flock.instance;\n\t}\n\n\tinit(size: number = 10, enemies: number = 1) {\n\t\tthis.boids = [];\n\t\tfor (let i = 0; i < size; i++) this.boids.push(new Boid());\n\t\tfor (let i = 0; i < enemies; i++) this.boids.push(new Enemy());\n\n\t\treturn this;\n\t}\n\n\trender(ctx: CanvasRenderingContext2D) {\n\t\tthis.boids = this.boids.filter((b) => b.alive);\n\n\t\tfor (let boid of this.boids) {\n\t\t\tboid.flock(this.boids);\n\t\t\tboid.tick();\n\t\t\tboid.render(ctx);\n\t\t}\n\t}\n}\n", "export const initCanvas = (): CanvasRenderingContext2D => {\n\tconst canvas = <HTMLCanvasElement>document.querySelector('.main-canvas');\n\n\tcanvas.width = window.innerWidth;\n\tcanvas.height = window.innerHeight;\n\n\twindow.onresize = () => {\n\t\tcanvas.width = window.innerWidth;\n\t\tcanvas.height = window.innerHeight;\n\t};\n\n\tconst ctx = canvas.getContext('2d');\n\tif (!ctx) throw new Error('Cannot get CanvasRenderingContext2D');\n\n\treturn ctx;\n};\n", "import AnimationController from './AnimationController';\nimport Flock from './Boids/Flock';\n\nimport { initCanvas } from './utils/canvas';\n\nconst flock = Flock.getInstance();\n\nnew AnimationController(initCanvas(), (ctx: CanvasRenderingContext2D) => {\n\tflock.render(ctx);\n}).start();\n"],
  "mappings": "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",
  "names": []
}
